apply plugin: 'com.android.application'

android {
    namespace "com.aicompleteme.app"
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.aicompleteme.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName "3.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
             // Files and dirs to omit from the packaged APK
             ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

repositories {
    google()
    mavenCentral()
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

// Exclude legacy Kotlin JDK7/JDK8 stdlib variants at module level to prevent duplicate classes
configurations {
    all {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
    }
}

dependencies {
    // Fix Kotlin dependency conflicts by using BOM
    implementation platform("org.jetbrains.kotlin:kotlin-bom:${rootProject.ext.kotlinBomVersion}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlinStdlibVersion}"
    
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.appcompat:appcompat:${rootProject.ext.androidxAppCompatVersion}"
    implementation "androidx.coordinatorlayout:coordinatorlayout:${rootProject.ext.androidxCoordinatorLayoutVersion}"
    implementation "androidx.core:core-ktx:${rootProject.ext.androidxCoreVersion}"
    implementation "androidx.fragment:fragment-ktx:${rootProject.ext.androidxFragmentVersion}"
    implementation "androidx.activity:activity-ktx:${rootProject.ext.androidxActivityVersion}"
    implementation "androidx.core:core-splashscreen:${rootProject.ext.coreSplashScreenVersion}"
    implementation "androidx.webkit:webkit:${rootProject.ext.androidxWebkitVersion}"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
    
    testImplementation "junit:junit:${rootProject.ext.junitVersion}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.ext.androidxJunitVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.ext.androidxEspressoCoreVersion}"
    implementation project(':capacitor-app')
    implementation project(':capacitor-haptics')
    implementation project(':capacitor-keyboard')
    implementation project(':capacitor-status-bar')
    implementation project(':capacitor-splash-screen')
    implementation project(':capacitor-device')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, Google services will not be available")
}